module "iam" {
  source                      = "./modules"
  region                      = var.region
  account                     = var.account
  s3_folder                   = var.s3_folder
  s3_region                   = var.s3_region
  s3_folder_type              = var.s3_folder_type
  s3_bucket                   = var.s3_bucket
  s3_tfstate_file             = var.s3_tfstate_file
  environment                 = var.environment
  map-migrated-server-id      = var.map-migrated-server-id
  jwt_secret                  = var.jwt_secret
  database_secret             = var.database_secret
  database_secret_raas_offers = var.database_secret_raas_offers
  strikeiron_secret           = var.strikeiron_secret
  em1_secret                  = var.em1_secret
  gms_secret                  = var.gms_secret
  gms_guest_secret            = var.gms_guest_secret
  pdb_republish_secret        = var.pdb_republish_secret
  kafka_secret                = var.kafka_secret
  crypto_Secret               = var.crypto_Secret
  tenable_audit               = var.tenable_audit
  security_questions_limit    = var. security_questions_limit
  role_name_flowlog           = var. role_name_flowlog
  policy_name_flowlog         = var.policy_name_flowlog
  jwt_config                  = var.jwt_config
  ENC_KEY                     = var.ENC_KEY
  GMS_KEYS                    = var.GMS_KEYS 
  STRIKEIRON_CREDENTIAL       = var.STRIKEIRON_CREDENTIAL
  lambda_enc_secret           = var.lambda_enc_secret
  gms_get_rg_secret           = var.gms_get_rg_secret
  sms_secret                  = var.sms_secret
  error_logger_secret         = var.error_logger_secret
  iden_encrypt_secret         = var.iden_encrypt_secret
  eks_cluster_policy          = var.eks_cluster_policy
  existing_eks_cluster_role   = var.existing_eks_cluster_role
  oauthtoken                  =var.oauthtoken
  leap_auth_provider_keys     = var.leap_auth_provider_keys
  sa_get_rg_secret            = var.sa_get_rg_secret
}
